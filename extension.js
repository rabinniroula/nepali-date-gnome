/* extension.js
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 * SPDX-License-Identifier: GPL-2.0-or-later
 */

/* exported init */

const bsStart = 1978
const adStart = '1921-04-13'

const bsData = [
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [30, 32, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 32, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 29, 30, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 29, 31, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 29, 30, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 29, 31, 366],
    [31, 31, 31, 32, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 29, 30, 30, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 30, 365],
    [31, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 32, 31, 32, 30, 31, 30, 30, 29, 30, 30, 30, 366],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30, 366],
    [30, 31, 32, 32, 30, 31, 30, 30, 29, 30, 30, 30, 365],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 30, 29, 30, 30, 30, 366],
    [30, 31, 32, 32, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [30, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 31, 32, 31, 31, 30, 30, 30, 29, 30, 30, 30, 365],
    [31, 31, 32, 31, 31, 31, 30, 29, 30, 30, 30, 30, 366],
    [30, 31, 32, 32, 31, 30, 30, 29, 30, 29, 30, 30, 364],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 30, 30, 30, 366],
    [31, 31, 32, 31, 31, 31, 29, 30, 29, 30, 29, 31, 365],
    [31, 32, 31, 32, 31, 30, 30, 30, 29, 29, 30, 31, 366]
]

function adToBs(year, month, day) {
    const start = new Date(adStart)
    const end = new Date(dateString(year, month, day))

    //const end = new Date(year, month - 1, day + 1)
    // console.log(end)

    // Calculate the difference between the end and start in days
    daysDiff = Math.floor((end.getTime() - start.getTime()) / 86400000)
    //console.log(daysDiff)

    // // Now get the BS date that matches the day difference from bs Start
    let dd = 0, endYear = 0, endMonth = 0, endDay = 0, flag = 0, i = 0, j = 0

    for (i; i < bsData.length; i++) {
        dd += bsData[i][12]
        if (dd > daysDiff) {
            dd -= bsData[i][12]
            for (j; j < 12; j++) {
                dd += bsData[i][j]
                if (dd > daysDiff) {
                    flag = true
                    dd -= bsData[i][j]
                    break
                }
            }
        }
        if (flag) break
    }
    //console.log(dd)
    endYear = 1978 + i
    endMonth = j + 1
    endDay = daysDiff - dd + 1
    return { year: endYear, month: endMonth, day: endDay }
}

function getTodayInBS() {
    date = new Date()

    let conv = adToBs(date.getFullYear(), date.getMonth() + 1, date.getDate())

    return `${conv.year}/${conv.month}/${conv.day}`
    // return { year: conv.year, month: conv.month, day: conv.day, weekday: date.getDay() }
}

function dateString(year, month, day) {
    return `${year}-${month > 9 ? month : '0' + month}-${day > 9 ? day : '0' + day}`
}


const GETTEXT_DOMAIN = 'my-indicator-extension';

const { GObject, St } = imports.gi;

const ExtensionUtils = imports.misc.extensionUtils;
const Main = imports.ui.main;
const PanelMenu = imports.ui.panelMenu;
const PopupMenu = imports.ui.popupMenu;

const _ = ExtensionUtils.gettext;

const Indicator = GObject.registerClass(
class Indicator extends PanelMenu.Button {
    _init() {
        super._init(0.0, _('Nepali Date'));
        log('hellow');
        log('bye');
        var today = getTodayInBS();

        this.add_child(new St.Label({
            text: today,
            style_class: 'system-status-icon'
        }));
    }
});

class Extension {
    constructor(uuid) {
        this._uuid = uuid;

        ExtensionUtils.initTranslations(GETTEXT_DOMAIN);
    }

    enable() {
        this._indicator = new Indicator();
        Main.panel.addToStatusArea(this._uuid, this._indicator);
    }

    disable() {
        this._indicator.destroy();
        this._indicator = null;
    }
}

function init(meta) {
    return new Extension(meta.uuid);
}
